import numpy as np
import pandas as pd
from sklearn import tree

# 讀入檔案
train = pd.read_csv('train.csv')
test = pd.read_csv('test.csv')

# 填補遺漏值
train['Age'].fillna(train['Age'].median(), inplace=True)
test['Age'].fillna(test['Age'].median(), inplace=True)
test['Fare'].fillna(test['Fare'].median(), inplace=True)

# 將文字轉成數字
train['Sex'], _ = pd.factorize(train['Sex'])
test['Sex'], _ = pd.factorize(test['Sex'])

# 創造新特徵
train['FamilySize'] = train['SibSp'] + train['Parch'] + 1
test['FamilySize'] = test['SibSp'] + test['Parch'] + 1

# 只看 Pclass, Sex, Age 和 Fare 四個特徵
x_train = train[['Pclass', 'Sex', 'Age', 'Fare', 'FamilySize']]
y_train = train[['Survived']]
x_test = test[['Pclass', 'Sex', 'Age', 'Fare', 'FamilySize']]

# 使用決策樹模型進行預測
clf = tree.DecisionTreeClassifier()
clf.fit(x_train, y_train)
y_test_predicted = clf.predict(x_test)

# 匯出檔案
submit = pd.DataFrame({'PassengerId': test['PassengerId'], 'Survived': y_test_predicted})
submit.to_csv('submit.csv', index=False)
